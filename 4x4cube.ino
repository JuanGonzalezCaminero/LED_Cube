//With each frame the contents of the whole cube are updated.
//Whithin each frame, the layers turn on one by one. this setting determines the duration
//of the frame based on the number of times each layer is lit
int cube_updates_per_frame = 16;
//With each of these updates, the leds of one layer light up, leaving the rest off
int layer_update_time = 1;

//We will write the contents of this variable to the register
int data;
//Each element in this sequence is a frame
int sequence_test[1][4][4] = {{{B10000000, B01000000, B00100000, B00010000},
                          {B01000000, B01000000, B00100000, B00100000},
                          {B00100000, B00100000, B01000000, B01000000},
                          {B00010000, B00100000, B01000000, B10000000}}};

int sequence_1[1][4][4] = {{{B11110000, B10010000, B10010000, B11110000},
                          {B10010000, B00000000, B00000000, B10010000},
                          {B10010000, B00000000, B00000000, B10010000},
                          {B11110000, B10010000, B10010000, B11110000}}};

int sequence_2[6][4][4] = {{{B11110000, B00000000, B00000000, B00000000},
                          {B11110000, B00000000, B00000000, B00000000},
                          {B11110000, B00000000, B00000000, B00000000},
                          {B11110000, B00000000, B00000000, B00000000}},
                          
                          {{B00000000, B11110000, B00000000, B00000000},
                          {B00000000, B11110000, B00000000, B00000000},
                          {B00000000, B11110000, B00000000, B00000000},
                          {B00000000, B11110000, B00000000, B00000000}},
                          
                          {{B00000000, B00000000, B11110000, B00000000},
                          {B00000000, B00000000, B11110000, B00000000},
                          {B00000000, B00000000, B11110000, B00000000},
                          {B00000000, B00000000, B11110000, B00000000}},
                          
                          {{B00000000, B00000000, B00000000, B11110000},
                          {B00000000, B00000000, B00000000, B11110000},
                          {B00000000, B00000000, B00000000, B11110000},
                          {B00000000, B00000000, B00000000, B11110000}},
                          
                          {{B00000000, B00000000, B11110000, B00000000},
                          {B00000000, B00000000, B11110000, B00000000},
                          {B00000000, B00000000, B11110000, B00000000},
                          {B00000000, B00000000, B11110000, B00000000}},
                          
                          {{B00000000, B11110000, B00000000, B00000000},
                          {B00000000, B11110000, B00000000, B00000000},
                          {B00000000, B11110000, B00000000, B00000000},
                          {B00000000, B11110000, B00000000, B00000000}},};

int sequence_all[1][4][4] = {{{B11110000, B11110000, B11110000, B11110000},
                          {B11110000, B11110000, B11110000, B11110000},
                          {B11110000, B11110000, B11110000, B11110000},
                          {B11110000, B11110000, B11110000, B11110000}}};

int sequence[21][4][4] = {{{B11110000, B00000000, B00000000, B00000000},
                          {B11110000, B00000000, B00000000, B00000000},
                          {B11110000, B00000000, B00000000, B00000000},
                          {B11110000, B00000000, B00000000, B00000000}},
                          
                          {{B00000000, B11110000, B00000000, B00000000},
                          {B00000000, B11110000, B00000000, B00000000},
                          {B00000000, B11110000, B00000000, B00000000},
                          {B00000000, B11110000, B00000000, B00000000}},
                          
                          {{B00000000, B00000000, B11110000, B00000000},
                          {B00000000, B00000000, B11110000, B00000000},
                          {B00000000, B00000000, B11110000, B00000000},
                          {B00000000, B00000000, B11110000, B00000000}},
                          
                          {{B00000000, B00000000, B00000000, B11110000},
                          {B00000000, B00000000, B00000000, B11110000},
                          {B00000000, B00000000, B00000000, B11110000},
                          {B00000000, B00000000, B00000000, B11110000}},
                          
                          {{B00000000, B00000000, B11110000, B00000000},
                          {B00000000, B00000000, B11110000, B00000000},
                          {B00000000, B00000000, B11110000, B00000000},
                          {B00000000, B00000000, B11110000, B00000000}},
                          
                          {{B00000000, B11110000, B00000000, B00000000},
                          {B00000000, B11110000, B00000000, B00000000},
                          {B00000000, B11110000, B00000000, B00000000},
                          {B00000000, B11110000, B00000000, B00000000}},
                          
                          {{B11110000, B00000000, B00000000, B00000000},
                          {B11110000, B00000000, B00000000, B00000000},
                          {B11110000, B00000000, B00000000, B00000000},
                          {B11110000, B00000000, B00000000, B00000000}},
                          
                          {{B11110000, B11110000, B11110000, B11110000},
                          {B00000000, B00000000, B00000000, B00000000},
                          {B00000000, B00000000, B00000000, B00000000},
                          {B00000000, B00000000, B00000000, B00000000}},
                          
                          {{B00000000, B00000000, B00000000, B00000000},
                          {B11110000, B11110000, B11110000, B11110000},
                          {B00000000, B00000000, B00000000, B00000000},
                          {B00000000, B00000000, B00000000, B00000000}},
                          
                          {{B00000000, B00000000, B00000000, B00000000},
                          {B00000000, B00000000, B00000000, B00000000},
                          {B11110000, B11110000, B11110000, B11110000},
                          {B00000000, B00000000, B00000000, B00000000}},
                          
                          {{B00000000, B00000000, B00000000, B00000000},
                          {B00000000, B00000000, B00000000, B00000000},
                          {B00000000, B00000000, B00000000, B00000000},
                          {B11110000, B11110000, B11110000, B11110000}},
                          
                          {{B00000000, B00000000, B00000000, B00000000},
                          {B00000000, B00000000, B00000000, B00000000},
                          {B11110000, B11110000, B11110000, B11110000},
                          {B00000000, B00000000, B00000000, B00000000}},
                          
                          {{B00000000, B00000000, B00000000, B00000000},
                          {B11110000, B11110000, B11110000, B11110000},
                          {B00000000, B00000000, B00000000, B00000000},
                          {B00000000, B00000000, B00000000, B00000000}},
                          
                          {{B11110000, B11110000, B11110000, B11110000},
                          {B00000000, B00000000, B00000000, B00000000},
                          {B00000000, B00000000, B00000000, B00000000},
                          {B00000000, B00000000, B00000000, B00000000}},
                          
                          {{B10000000, B10000000, B10000000, B10000000},
                          {B10000000, B10000000, B10000000, B10000000},
                          {B10000000, B10000000, B10000000, B10000000},
                          {B10000000, B10000000, B10000000, B10000000}},
                          
                          {{B01000000, B01000000, B01000000, B01000000},
                          {B01000000, B01000000, B01000000, B01000000},
                          {B01000000, B01000000, B01000000, B01000000},
                          {B01000000, B01000000, B01000000, B01000000}},
                          
                          {{B00100000, B00100000, B00100000, B00100000},
                          {B00100000, B00100000, B00100000, B00100000},
                          {B00100000, B00100000, B00100000, B00100000},
                          {B00100000, B00100000, B00100000, B00100000}},
                          
                          {{B00010000, B00010000, B00010000, B00010000},
                          {B00010000, B00010000, B00010000, B00010000},
                          {B00010000, B00010000, B00010000, B00010000},
                          {B00010000, B00010000, B00010000, B00010000}},
                          
                          {{B00100000, B00100000, B00100000, B00100000},
                          {B00100000, B00100000, B00100000, B00100000},
                          {B00100000, B00100000, B00100000, B00100000},
                          {B00100000, B00100000, B00100000, B00100000}},
                          
                          {{B01000000, B01000000, B01000000, B01000000},
                          {B01000000, B01000000, B01000000, B01000000},
                          {B01000000, B01000000, B01000000, B01000000},
                          {B01000000, B01000000, B01000000, B01000000}},
                          
                          {{B10000000, B10000000, B10000000, B10000000},
                          {B10000000, B10000000, B10000000, B10000000},
                          {B10000000, B10000000, B10000000, B10000000},
                          {B10000000, B10000000, B10000000, B10000000}},};
                          
int layer[8] = {B10000000, 
                B01000000, 
                B00100000, 
                B00010000, 
                B00001000, 
                B00000100, 
                B00000010,
                B00000001};

//Choose the sequence that will play
//int *sequence = sequence_2;
int sequence_length = 21;

void setup() {
  //Serial.begin(9600); //Inicia la consola
  // put your setup code here, to run once:
  //Clock pin: 8
  pinMode(8, OUTPUT);
  //Latch pin: 9
  pinMode(9, OUTPUT);
  //Data pin: 10
  pinMode(10, OUTPUT);
  //Layer selection pin: 11
  //pinMode(11, OUTPUT);
  data = LOW;

  /*
  //Deactivate the latch so the new output is buffered and isn't written inmediately
  digitalWrite(9, LOW);
  
  //First, shift out the bits that select the layer
  shiftOut(10, 8, LSBFIRST, B11110000);
  //Horizontal layers
  //Shift the bits corresponding to the frame, vertical layer, and level of the cube
  shiftOut(10, 8, LSBFIRST, B00000000);
  shiftOut(10, 8, LSBFIRST, B00000000);
  shiftOut(10, 8, LSBFIRST, B00000000);
  shiftOut(10, 8, LSBFIRST, B10100000);
  
  //Set the latch pin to high so the output is written to all 8 output pins
  digitalWrite(9, HIGH);
  */
}

void loop() {
  //Run trough the frames
  for(int frame=0; frame<sequence_length; frame++){
    for (int update=0; update < cube_updates_per_frame; update++){
      //Vertical layers
      for(int vertical_layer=0; vertical_layer<4; vertical_layer++){
        //Deactivate the latch so the new output is buffered and isn't written inmediately
         digitalWrite(9, LOW);
         
        //First, shift out the bits that select the layer
        shiftOut(10, 8, LSBFIRST, layer[vertical_layer]);
        //Horizontal layers
        for(int horizontal_layer=0; horizontal_layer<4; horizontal_layer++){ 
          
          //Shift the bits corresponding to the frame, vertical layer, and level of the cube
          shiftOut(10, 8, LSBFIRST, sequence[frame][horizontal_layer][vertical_layer]);
          
        }
        //Set the latch pin to high so the output is written to all 8 output pins
        digitalWrite(9, HIGH);
        
        delay(layer_update_time);
      }
    } 
  }
}
























